// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1/" /p:OutDir="C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1\bin\Release\net8.0/" /p:OutputPath="C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1\bin\Release\net8.0/" /p:PublishDir="C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1\publish/" in C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1
// command took 1.32 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1/" /p:OutDir="C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1\bin\Release\net8.0/" /p:OutputPath="C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1\bin\Release\net8.0/" /p:PublishDir="C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1\publish/" --output "C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1\bin\Release\net8.0/" in C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1
// command took 4.05 sec and exited with 0
// ***** Done, took 00:00:05 (5.48 sec)   *****
// Found 1 benchmarks:
//   BenchmarkTest.Lexer: .NET 8.0(Runtime=.NET 8.0)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: BenchmarkTest.Lexer: .NET 8.0(Runtime=.NET 8.0)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "InterpreterC#-.NET 8.0-1.dll" --anonymousPipes 1520 1528 --benchmarkName InterpreterC_.BenchmarkTest.Lexer --job ".NET 8.0" --benchmarkId 0 in C:\Users\mikaa\C\GitHub\IntLang\InterpreterC#\bin\Release\net8.0\InterpreterC#-.NET 8.0-1\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.15.1
// Runtime=.NET 8.0.1 (8.0.123.58001), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: .NET 8.0

OverheadJitting  1: 1 op, 86400.00 ns, 86.4000 us/op
WorkloadJitting  1: 1 op, 648100.00 ns, 648.1000 us/op

OverheadJitting  2: 16 op, 117400.00 ns, 7.3375 us/op
WorkloadJitting  2: 16 op, 300900.00 ns, 18.8063 us/op

WorkloadPilot    1: 16 op, 176500.00 ns, 11.0313 us/op
WorkloadPilot    2: 32 op, 378800.00 ns, 11.8375 us/op
WorkloadPilot    3: 64 op, 881600.00 ns, 13.7750 us/op
WorkloadPilot    4: 128 op, 1632400.00 ns, 12.7531 us/op
WorkloadPilot    5: 256 op, 3096700.00 ns, 12.0965 us/op
WorkloadPilot    6: 512 op, 5728100.00 ns, 11.1877 us/op
WorkloadPilot    7: 1024 op, 11312000.00 ns, 11.0469 us/op
WorkloadPilot    8: 2048 op, 22278800.00 ns, 10.8783 us/op
WorkloadPilot    9: 4096 op, 41990900.00 ns, 10.2517 us/op
WorkloadPilot   10: 8192 op, 83381600.00 ns, 10.1784 us/op
WorkloadPilot   11: 16384 op, 169609700.00 ns, 10.3522 us/op
WorkloadPilot   12: 32768 op, 84235800.00 ns, 2.5707 us/op
WorkloadPilot   13: 65536 op, 161591100.00 ns, 2.4657 us/op
WorkloadPilot   14: 131072 op, 320176700.00 ns, 2.4428 us/op
WorkloadPilot   15: 262144 op, 665164600.00 ns, 2.5374 us/op

OverheadWarmup   1: 262144 op, 922500.00 ns, 3.5191 ns/op
OverheadWarmup   2: 262144 op, 426300.00 ns, 1.6262 ns/op
OverheadWarmup   3: 262144 op, 426300.00 ns, 1.6262 ns/op
OverheadWarmup   4: 262144 op, 426200.00 ns, 1.6258 ns/op
OverheadWarmup   5: 262144 op, 427400.00 ns, 1.6304 ns/op
OverheadWarmup   6: 262144 op, 428100.00 ns, 1.6331 ns/op
OverheadWarmup   7: 262144 op, 426100.00 ns, 1.6254 ns/op

OverheadActual   1: 262144 op, 428700.00 ns, 1.6354 ns/op
OverheadActual   2: 262144 op, 428800.00 ns, 1.6357 ns/op
OverheadActual   3: 262144 op, 428700.00 ns, 1.6354 ns/op
OverheadActual   4: 262144 op, 428700.00 ns, 1.6354 ns/op
OverheadActual   5: 262144 op, 429400.00 ns, 1.6380 ns/op
OverheadActual   6: 262144 op, 430100.00 ns, 1.6407 ns/op
OverheadActual   7: 262144 op, 428600.00 ns, 1.6350 ns/op
OverheadActual   8: 262144 op, 431000.00 ns, 1.6441 ns/op
OverheadActual   9: 262144 op, 430900.00 ns, 1.6438 ns/op
OverheadActual  10: 262144 op, 430900.00 ns, 1.6438 ns/op
OverheadActual  11: 262144 op, 430900.00 ns, 1.6438 ns/op
OverheadActual  12: 262144 op, 430900.00 ns, 1.6438 ns/op
OverheadActual  13: 262144 op, 431000.00 ns, 1.6441 ns/op
OverheadActual  14: 262144 op, 430900.00 ns, 1.6438 ns/op
OverheadActual  15: 262144 op, 430900.00 ns, 1.6438 ns/op

OverheadWarmup   1: 262144 op, 431100.00 ns, 1.6445 ns/op
OverheadWarmup   2: 262144 op, 431000.00 ns, 1.6441 ns/op
OverheadWarmup   3: 262144 op, 431000.00 ns, 1.6441 ns/op
OverheadWarmup   4: 262144 op, 430900.00 ns, 1.6438 ns/op
OverheadWarmup   5: 262144 op, 430900.00 ns, 1.6438 ns/op
OverheadWarmup   6: 262144 op, 430900.00 ns, 1.6438 ns/op

// BeforeActualRun
WorkloadActual   1: 262144 op, 679842100.00 ns, 2.5934 us/op
WorkloadActual   2: 262144 op, 640111300.00 ns, 2.4418 us/op
WorkloadActual   3: 262144 op, 643477200.00 ns, 2.4547 us/op
WorkloadActual   4: 262144 op, 637671900.00 ns, 2.4325 us/op
WorkloadActual   5: 262144 op, 667124200.00 ns, 2.5449 us/op
WorkloadActual   6: 262144 op, 667645900.00 ns, 2.5469 us/op
WorkloadActual   7: 262144 op, 671040900.00 ns, 2.5598 us/op
WorkloadActual   8: 262144 op, 754548100.00 ns, 2.8784 us/op
WorkloadActual   9: 262144 op, 717102200.00 ns, 2.7355 us/op
WorkloadActual  10: 262144 op, 634705400.00 ns, 2.4212 us/op
WorkloadActual  11: 262144 op, 655011100.00 ns, 2.4987 us/op
WorkloadActual  12: 262144 op, 668946600.00 ns, 2.5518 us/op
WorkloadActual  13: 262144 op, 666621100.00 ns, 2.5430 us/op
WorkloadActual  14: 262144 op, 661630500.00 ns, 2.5239 us/op
WorkloadActual  15: 262144 op, 660180700.00 ns, 2.5184 us/op
WorkloadActual  16: 262144 op, 685568200.00 ns, 2.6152 us/op
WorkloadActual  17: 262144 op, 646411300.00 ns, 2.4659 us/op
WorkloadActual  18: 262144 op, 678628700.00 ns, 2.5888 us/op
WorkloadActual  19: 262144 op, 664683300.00 ns, 2.5356 us/op
WorkloadActual  20: 262144 op, 689809000.00 ns, 2.6314 us/op
WorkloadActual  21: 262144 op, 666769500.00 ns, 2.5435 us/op
WorkloadActual  22: 262144 op, 646168100.00 ns, 2.4649 us/op
WorkloadActual  23: 262144 op, 669089000.00 ns, 2.5524 us/op
WorkloadActual  24: 262144 op, 657183100.00 ns, 2.5070 us/op

// AfterActualRun
WorkloadResult   1: 262144 op, 679411200.00 ns, 2.5917 us/op
WorkloadResult   2: 262144 op, 639680400.00 ns, 2.4402 us/op
WorkloadResult   3: 262144 op, 643046300.00 ns, 2.4530 us/op
WorkloadResult   4: 262144 op, 637241000.00 ns, 2.4309 us/op
WorkloadResult   5: 262144 op, 666693300.00 ns, 2.5432 us/op
WorkloadResult   6: 262144 op, 667215000.00 ns, 2.5452 us/op
WorkloadResult   7: 262144 op, 670610000.00 ns, 2.5582 us/op
WorkloadResult   8: 262144 op, 634274500.00 ns, 2.4196 us/op
WorkloadResult   9: 262144 op, 654580200.00 ns, 2.4970 us/op
WorkloadResult  10: 262144 op, 668515700.00 ns, 2.5502 us/op
WorkloadResult  11: 262144 op, 666190200.00 ns, 2.5413 us/op
WorkloadResult  12: 262144 op, 661199600.00 ns, 2.5223 us/op
WorkloadResult  13: 262144 op, 659749800.00 ns, 2.5167 us/op
WorkloadResult  14: 262144 op, 685137300.00 ns, 2.6136 us/op
WorkloadResult  15: 262144 op, 645980400.00 ns, 2.4642 us/op
WorkloadResult  16: 262144 op, 678197800.00 ns, 2.5871 us/op
WorkloadResult  17: 262144 op, 664252400.00 ns, 2.5339 us/op
WorkloadResult  18: 262144 op, 689378100.00 ns, 2.6298 us/op
WorkloadResult  19: 262144 op, 666338600.00 ns, 2.5419 us/op
WorkloadResult  20: 262144 op, 645737200.00 ns, 2.4633 us/op
WorkloadResult  21: 262144 op, 668658100.00 ns, 2.5507 us/op
WorkloadResult  22: 262144 op, 656752200.00 ns, 2.5053 us/op
// GC:  132 0 0 1105205248 262144
// Threading:  0 0 262144

// AfterAll
// Benchmark Process 156536 has exited with code 0.

Mean = 2.523 μs, StdErr = 0.012 μs (0.49%), N = 22, StdDev = 0.059 μs
Min = 2.420 μs, Q1 = 2.472 μs, Median = 2.538 μs, Q3 = 2.551 μs, Max = 2.630 μs
IQR = 0.078 μs, LowerFence = 2.355 μs, UpperFence = 2.668 μs
ConfidenceInterval = [2.475 μs; 2.570 μs] (CI 99.9%), Margin = 0.048 μs (1.89% of Mean)
Skewness = -0.11, Kurtosis = 2.02, MValue = 2

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2025-06-10 11:42 (0h 0m from now) **
Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\InterpreterC_.BenchmarkTest-report.csv
  BenchmarkDotNet.Artifacts\results\InterpreterC_.BenchmarkTest-report-github.md
  BenchmarkDotNet.Artifacts\results\InterpreterC_.BenchmarkTest-report.html

// * Detailed results *
BenchmarkTest.Lexer: .NET 8.0(Runtime=.NET 8.0)
Runtime = .NET 8.0.1 (8.0.123.58001), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 2.523 μs, StdErr = 0.012 μs (0.49%), N = 22, StdDev = 0.059 μs
Min = 2.420 μs, Q1 = 2.472 μs, Median = 2.538 μs, Q3 = 2.551 μs, Max = 2.630 μs
IQR = 0.078 μs, LowerFence = 2.355 μs, UpperFence = 2.668 μs
ConfidenceInterval = [2.475 μs; 2.570 μs] (CI 99.9%), Margin = 0.048 μs (1.89% of Mean)
Skewness = -0.11, Kurtosis = 2.02, MValue = 2
-------------------- Histogram --------------------
[2.414 μs ; 2.469 μs) | @@@@@@
[2.469 μs ; 2.559 μs) | @@@@@@@@@@@@
[2.559 μs ; 2.636 μs) | @@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet v0.15.1, Windows 11 (10.0.26100.4061/24H2/2024Update/HudsonValley)
AMD Ryzen 7 6800H with Radeon Graphics 3.20GHz, 1 CPU, 16 logical and 8 physical cores
.NET SDK 8.0.101
  [Host]   : .NET 8.0.1 (8.0.123.58001), X64 RyuJIT AVX2 [AttachedDebugger]
  .NET 8.0 : .NET 8.0.1 (8.0.123.58001), X64 RyuJIT AVX2

Job=.NET 8.0  Runtime=.NET 8.0  

| Method | Mean     | Error     | StdDev    | Gen0   | Allocated |
|------- |---------:|----------:|----------:|-------:|----------:|
| Lexer  | 2.523 μs | 0.0476 μs | 0.0585 μs | 0.5035 |   4.12 KB |

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  BenchmarkTest.Lexer: .NET 8.0 -> 2 outliers were removed (2.74 μs, 2.88 μs)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Gen0      : GC Generation 0 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 μs      : 1 Microsecond (0.000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:18 (18.92 sec), executed benchmarks: 1

Global total time: 00:00:24 (24.67 sec), executed benchmarks: 1
// * Artifacts cleanup *
Artifacts cleanup is finished
